
ATMEL_PROJMASTER.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000dd2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000030  00800060  00000dd2  00000e66  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001f  00800090  00800090  00000e96  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000e96  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000ec8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000003f0  00000000  00000000  00000f04  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000359b  00000000  00000000  000012f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000129b  00000000  00000000  0000488f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000020f7  00000000  00000000  00005b2a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b7c  00000000  00000000  00007c24  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000015ea  00000000  00000000  000087a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000023fb  00000000  00000000  00009d8a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000340  00000000  00000000  0000c185  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 18 03 	jmp	0x630	; 0x630 <__vector_1>
   8:	0c 94 41 03 	jmp	0x682	; 0x682 <__vector_2>
   c:	0c 94 6a 03 	jmp	0x6d4	; 0x6d4 <__vector_3>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 4d 05 	jmp	0xa9a	; 0xa9a <__vector_6>
  1c:	0c 94 76 05 	jmp	0xaec	; 0xaec <__vector_7>
  20:	0c 94 9f 05 	jmp	0xb3e	; 0xb3e <__vector_8>
  24:	0c 94 c8 05 	jmp	0xb90	; 0xb90 <__vector_9>
  28:	0c 94 fb 04 	jmp	0x9f6	; 0x9f6 <__vector_10>
  2c:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__vector_11>
  30:	0c 94 d2 04 	jmp	0x9a4	; 0x9a4 <__vector_12>
  34:	0c 94 06 06 	jmp	0xc0c	; 0xc0c <__vector_13>
  38:	0c 94 2f 06 	jmp	0xc5e	; 0xc5e <__vector_14>
  3c:	0c 94 58 06 	jmp	0xcb0	; 0xcb0 <__vector_15>
  40:	0c 94 ef 02 	jmp	0x5de	; 0x5de <__vector_16>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 ed       	ldi	r30, 0xD2	; 210
  68:	fd e0       	ldi	r31, 0x0D	; 13
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 39       	cpi	r26, 0x90	; 144
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e9       	ldi	r26, 0x90	; 144
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	af 3a       	cpi	r26, 0xAF	; 175
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 1a 01 	call	0x234	; 0x234 <main>
  8a:	0c 94 e7 06 	jmp	0xdce	; 0xdce <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <System_Initialization>:
	GPIO_voidSetPinValue(PORT_C, PIN_0, LOGIC_HIGH);
}

void UARTReceiveFunction(void)
{
	UART_Flag = 1;
  92:	0e 94 93 03 	call	0x726	; 0x726 <GLOBINT_voidSetEnableFlag>
  96:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <UART_Initialization>
  9a:	0e 94 a0 01 	call	0x340	; 0x340 <LCD_voidInit>
  9e:	60 e0       	ldi	r22, 0x00	; 0
  a0:	80 e0       	ldi	r24, 0x00	; 0
  a2:	0e 94 78 02 	call	0x4f0	; 0x4f0 <LCD_voidSetCursor>
  a6:	81 e6       	ldi	r24, 0x61	; 97
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	0e 94 65 02 	call	0x4ca	; 0x4ca <LCD_voidDisplayString>
  ae:	0e 94 a3 04 	call	0x946	; 0x946 <SPI_voidInitialization_Master>
  b2:	87 ea       	ldi	r24, 0xA7	; 167
  b4:	91 e6       	ldi	r25, 0x61	; 97
  b6:	01 97       	sbiw	r24, 0x01	; 1
  b8:	f1 f7       	brne	.-4      	; 0xb6 <System_Initialization+0x24>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <System_Initialization+0x2a>
  bc:	00 00       	nop
  be:	60 e0       	ldi	r22, 0x00	; 0
  c0:	81 e0       	ldi	r24, 0x01	; 1
  c2:	0e 94 78 02 	call	0x4f0	; 0x4f0 <LCD_voidSetCursor>
  c6:	8c e6       	ldi	r24, 0x6C	; 108
  c8:	90 e0       	ldi	r25, 0x00	; 0
  ca:	0e 94 65 02 	call	0x4ca	; 0x4ca <LCD_voidDisplayString>
  ce:	40 e0       	ldi	r20, 0x00	; 0
  d0:	60 e0       	ldi	r22, 0x00	; 0
  d2:	82 e0       	ldi	r24, 0x02	; 2
  d4:	0e 94 97 03 	call	0x72e	; 0x72e <GPIO_voidSetPinDirection>
  d8:	40 e0       	ldi	r20, 0x00	; 0
  da:	61 e0       	ldi	r22, 0x01	; 1
  dc:	82 e0       	ldi	r24, 0x02	; 2
  de:	0e 94 97 03 	call	0x72e	; 0x72e <GPIO_voidSetPinDirection>
  e2:	40 e0       	ldi	r20, 0x00	; 0
  e4:	60 e0       	ldi	r22, 0x00	; 0
  e6:	82 e0       	ldi	r24, 0x02	; 2
  e8:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
  ec:	41 e0       	ldi	r20, 0x01	; 1
  ee:	61 e0       	ldi	r22, 0x01	; 1
  f0:	82 e0       	ldi	r24, 0x02	; 2
  f2:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
  f6:	0e 94 ae 02 	call	0x55c	; 0x55c <ADC_voidInit>
  fa:	08 95       	ret

000000fc <SPI_Slave_1_Select>:
  fc:	40 e0       	ldi	r20, 0x00	; 0
  fe:	60 e0       	ldi	r22, 0x00	; 0
 100:	82 e0       	ldi	r24, 0x02	; 2
 102:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 106:	41 e0       	ldi	r20, 0x01	; 1
 108:	61 e0       	ldi	r22, 0x01	; 1
 10a:	82 e0       	ldi	r24, 0x02	; 2
 10c:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 110:	08 95       	ret

00000112 <SPI_Slave_2_Select>:
 112:	40 e0       	ldi	r20, 0x00	; 0
 114:	61 e0       	ldi	r22, 0x01	; 1
 116:	82 e0       	ldi	r24, 0x02	; 2
 118:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 11c:	41 e0       	ldi	r20, 0x01	; 1
 11e:	60 e0       	ldi	r22, 0x00	; 0
 120:	82 e0       	ldi	r24, 0x02	; 2
 122:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 126:	08 95       	ret

00000128 <executeMain_MASTER>:
 * 4 - LDR Light Sensor (Next Release)
 * 		Turns the lights Automatically when dark
 */

void executeMain_MASTER(void) {
	if(UART_Flag == 1)
 128:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 12c:	81 30       	cpi	r24, 0x01	; 1
 12e:	09 f0       	breq	.+2      	; 0x132 <executeMain_MASTER+0xa>
 130:	68 c0       	rjmp	.+208    	; 0x202 <executeMain_MASTER+0xda>
	{
		//UART_Read = UART_voidReceiveByte_ISR();
		UART_Read = 't';
 132:	84 e7       	ldi	r24, 0x74	; 116
 134:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <UART_Read>
		if((UART_Read == 'w') || (UART_Read == 's') ||
 138:	80 91 91 00 	lds	r24, 0x0091	; 0x800091 <UART_Read>
 13c:	87 37       	cpi	r24, 0x77	; 119
 13e:	81 f0       	breq	.+32     	; 0x160 <executeMain_MASTER+0x38>
 140:	80 91 91 00 	lds	r24, 0x0091	; 0x800091 <UART_Read>
 144:	83 37       	cpi	r24, 0x73	; 115
 146:	61 f0       	breq	.+24     	; 0x160 <executeMain_MASTER+0x38>
		(UART_Read == 'x') || (UART_Read == 'g') || (UART_Read == 'f') )
 148:	80 91 91 00 	lds	r24, 0x0091	; 0x800091 <UART_Read>
void executeMain_MASTER(void) {
	if(UART_Flag == 1)
	{
		//UART_Read = UART_voidReceiveByte_ISR();
		UART_Read = 't';
		if((UART_Read == 'w') || (UART_Read == 's') ||
 14c:	88 37       	cpi	r24, 0x78	; 120
 14e:	41 f0       	breq	.+16     	; 0x160 <executeMain_MASTER+0x38>
		(UART_Read == 'x') || (UART_Read == 'g') || (UART_Read == 'f') )
 150:	80 91 91 00 	lds	r24, 0x0091	; 0x800091 <UART_Read>
 154:	87 36       	cpi	r24, 0x67	; 103
 156:	21 f0       	breq	.+8      	; 0x160 <executeMain_MASTER+0x38>
 158:	80 91 91 00 	lds	r24, 0x0091	; 0x800091 <UART_Read>
 15c:	86 36       	cpi	r24, 0x66	; 102
 15e:	09 f5       	brne	.+66     	; 0x1a2 <executeMain_MASTER+0x7a>
		{
			SPI_Slave_2_Select();
 160:	0e 94 89 00 	call	0x112	; 0x112 <SPI_Slave_2_Select>

			SPI_Read = SPI_u8SendByte_Polling(UART_Read);
 164:	80 91 91 00 	lds	r24, 0x0091	; 0x800091 <UART_Read>
 168:	0e 94 ca 04 	call	0x994	; 0x994 <SPI_u8SendByte_Polling>
 16c:	80 93 92 00 	sts	0x0092, r24	; 0x800092 <SPI_Read>
			LCD_voidSetCursor(2, 4);
 170:	64 e0       	ldi	r22, 0x04	; 4
 172:	82 e0       	ldi	r24, 0x02	; 2
 174:	0e 94 78 02 	call	0x4f0	; 0x4f0 <LCD_voidSetCursor>
			LCD_voidSendData(UART_Read);
 178:	80 91 91 00 	lds	r24, 0x0091	; 0x800091 <UART_Read>
 17c:	0e 94 e6 01 	call	0x3cc	; 0x3cc <LCD_voidSendData>

			LCD_voidSetCursor(2, 12);
 180:	6c e0       	ldi	r22, 0x0C	; 12
 182:	82 e0       	ldi	r24, 0x02	; 2
 184:	0e 94 78 02 	call	0x4f0	; 0x4f0 <LCD_voidSetCursor>
			LCD_voidSendData(SPI_Read);
 188:	80 91 92 00 	lds	r24, 0x0092	; 0x800092 <SPI_Read>
 18c:	0e 94 e6 01 	call	0x3cc	; 0x3cc <LCD_voidSendData>

			LCD_voidSetCursor(3, 0);
 190:	60 e0       	ldi	r22, 0x00	; 0
 192:	83 e0       	ldi	r24, 0x03	; 3
 194:	0e 94 78 02 	call	0x4f0	; 0x4f0 <LCD_voidSetCursor>
			LCD_voidDisplayString("SPI 2");
 198:	8d e7       	ldi	r24, 0x7D	; 125
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	0e 94 65 02 	call	0x4ca	; 0x4ca <LCD_voidDisplayString>
 1a0:	2e c0       	rjmp	.+92     	; 0x1fe <executeMain_MASTER+0xd6>

			//UART_Flag = 0;
			//_delay_ms(100);
		}
		else if((UART_Read == 't') || (UART_Read == 'r'))
 1a2:	80 91 91 00 	lds	r24, 0x0091	; 0x800091 <UART_Read>
 1a6:	84 37       	cpi	r24, 0x74	; 116
 1a8:	21 f0       	breq	.+8      	; 0x1b2 <executeMain_MASTER+0x8a>
 1aa:	80 91 91 00 	lds	r24, 0x0091	; 0x800091 <UART_Read>
 1ae:	82 37       	cpi	r24, 0x72	; 114
 1b0:	31 f5       	brne	.+76     	; 0x1fe <executeMain_MASTER+0xd6>
		{
			SPI_Slave_1_Select();
 1b2:	0e 94 7e 00 	call	0xfc	; 0xfc <SPI_Slave_1_Select>
			SPI_Read = SPI_u8SendByte_Polling(UART_Read);
 1b6:	80 91 91 00 	lds	r24, 0x0091	; 0x800091 <UART_Read>
 1ba:	0e 94 ca 04 	call	0x994	; 0x994 <SPI_u8SendByte_Polling>
 1be:	80 93 92 00 	sts	0x0092, r24	; 0x800092 <SPI_Read>

			LCD_voidSetCursor(2, 4);
 1c2:	64 e0       	ldi	r22, 0x04	; 4
 1c4:	82 e0       	ldi	r24, 0x02	; 2
 1c6:	0e 94 78 02 	call	0x4f0	; 0x4f0 <LCD_voidSetCursor>
			LCD_voidSendData(UART_Read);
 1ca:	80 91 91 00 	lds	r24, 0x0091	; 0x800091 <UART_Read>
 1ce:	0e 94 e6 01 	call	0x3cc	; 0x3cc <LCD_voidSendData>

			LCD_voidSetCursor(2, 12);
 1d2:	6c e0       	ldi	r22, 0x0C	; 12
 1d4:	82 e0       	ldi	r24, 0x02	; 2
 1d6:	0e 94 78 02 	call	0x4f0	; 0x4f0 <LCD_voidSetCursor>
			LCD_voidSendData(SPI_Read);
 1da:	80 91 92 00 	lds	r24, 0x0092	; 0x800092 <SPI_Read>
 1de:	0e 94 e6 01 	call	0x3cc	; 0x3cc <LCD_voidSendData>

			LCD_voidSetCursor(3, 0);
 1e2:	60 e0       	ldi	r22, 0x00	; 0
 1e4:	83 e0       	ldi	r24, 0x03	; 3
 1e6:	0e 94 78 02 	call	0x4f0	; 0x4f0 <LCD_voidSetCursor>
			LCD_voidDisplayString("SPI 1");
 1ea:	83 e8       	ldi	r24, 0x83	; 131
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	0e 94 65 02 	call	0x4ca	; 0x4ca <LCD_voidDisplayString>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1f2:	87 ea       	ldi	r24, 0xA7	; 167
 1f4:	91 e6       	ldi	r25, 0x61	; 97
 1f6:	01 97       	sbiw	r24, 0x01	; 1
 1f8:	f1 f7       	brne	.-4      	; 0x1f6 <executeMain_MASTER+0xce>
 1fa:	00 c0       	rjmp	.+0      	; 0x1fc <executeMain_MASTER+0xd4>
 1fc:	00 00       	nop

			//UART_Flag = 0;
			_delay_ms(100);
		}
		SPI_Read = 0;
 1fe:	10 92 92 00 	sts	0x0092, r1	; 0x800092 <SPI_Read>
	}

	LCD_voidSetCursor(3, 0);
 202:	60 e0       	ldi	r22, 0x00	; 0
 204:	83 e0       	ldi	r24, 0x03	; 3
 206:	0e 94 78 02 	call	0x4f0	; 0x4f0 <LCD_voidSetCursor>
	LCD_voidDisplayString("Temp: ");
 20a:	89 e8       	ldi	r24, 0x89	; 137
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	0e 94 65 02 	call	0x4ca	; 0x4ca <LCD_voidDisplayString>
	LCD_voidSetCursor(3, 6);
 212:	66 e0       	ldi	r22, 0x06	; 6
 214:	83 e0       	ldi	r24, 0x03	; 3
 216:	0e 94 78 02 	call	0x4f0	; 0x4f0 <LCD_voidSetCursor>
	ADC_Read = ADC_u16ReadTemperature(CHANNEL_0);
 21a:	80 e0       	ldi	r24, 0x00	; 0
 21c:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <ADC_u16ReadTemperature>
 220:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__data_end>
	LCD_voidIntgerToString(ADC_Read);
 224:	68 2f       	mov	r22, r24
 226:	70 e0       	ldi	r23, 0x00	; 0
 228:	80 e0       	ldi	r24, 0x00	; 0
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	0e 94 8f 02 	call	0x51e	; 0x51e <LCD_voidIntgerToString>
 230:	08 95       	ret

00000232 <executeISR>:
}

void executeISR(void)
{
 232:	08 95       	ret

00000234 <main>:
 234:	0e 94 49 00 	call	0x92	; 0x92 <System_Initialization>
 238:	0e 94 19 01 	call	0x232	; 0x232 <executeISR>
 23c:	0e 94 94 00 	call	0x128	; 0x128 <executeMain_MASTER>
 240:	fb cf       	rjmp	.-10     	; 0x238 <main+0x4>

00000242 <LCD_voidSendCommand>:
 242:	cf 93       	push	r28
 244:	c8 2f       	mov	r28, r24
 246:	40 e0       	ldi	r20, 0x00	; 0
 248:	63 e0       	ldi	r22, 0x03	; 3
 24a:	80 e0       	ldi	r24, 0x00	; 0
 24c:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 250:	89 ef       	ldi	r24, 0xF9	; 249
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	01 97       	sbiw	r24, 0x01	; 1
 256:	f1 f7       	brne	.-4      	; 0x254 <LCD_voidSendCommand+0x12>
 258:	00 c0       	rjmp	.+0      	; 0x25a <LCD_voidSendCommand+0x18>
 25a:	00 00       	nop
 25c:	41 e0       	ldi	r20, 0x01	; 1
 25e:	62 e0       	ldi	r22, 0x02	; 2
 260:	80 e0       	ldi	r24, 0x00	; 0
 262:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 266:	89 ef       	ldi	r24, 0xF9	; 249
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	01 97       	sbiw	r24, 0x01	; 1
 26c:	f1 f7       	brne	.-4      	; 0x26a <LCD_voidSendCommand+0x28>
 26e:	00 c0       	rjmp	.+0      	; 0x270 <LCD_voidSendCommand+0x2e>
 270:	00 00       	nop
 272:	c4 fb       	bst	r28, 4
 274:	44 27       	eor	r20, r20
 276:	40 f9       	bld	r20, 0
 278:	60 e0       	ldi	r22, 0x00	; 0
 27a:	81 e0       	ldi	r24, 0x01	; 1
 27c:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 280:	c5 fb       	bst	r28, 5
 282:	44 27       	eor	r20, r20
 284:	40 f9       	bld	r20, 0
 286:	61 e0       	ldi	r22, 0x01	; 1
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 28e:	c6 fb       	bst	r28, 6
 290:	44 27       	eor	r20, r20
 292:	40 f9       	bld	r20, 0
 294:	62 e0       	ldi	r22, 0x02	; 2
 296:	81 e0       	ldi	r24, 0x01	; 1
 298:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 29c:	4c 2f       	mov	r20, r28
 29e:	44 1f       	adc	r20, r20
 2a0:	44 27       	eor	r20, r20
 2a2:	44 1f       	adc	r20, r20
 2a4:	63 e0       	ldi	r22, 0x03	; 3
 2a6:	81 e0       	ldi	r24, 0x01	; 1
 2a8:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 2ac:	89 ef       	ldi	r24, 0xF9	; 249
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	01 97       	sbiw	r24, 0x01	; 1
 2b2:	f1 f7       	brne	.-4      	; 0x2b0 <LCD_voidSendCommand+0x6e>
 2b4:	00 c0       	rjmp	.+0      	; 0x2b6 <LCD_voidSendCommand+0x74>
 2b6:	00 00       	nop
 2b8:	40 e0       	ldi	r20, 0x00	; 0
 2ba:	62 e0       	ldi	r22, 0x02	; 2
 2bc:	80 e0       	ldi	r24, 0x00	; 0
 2be:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 2c2:	89 ef       	ldi	r24, 0xF9	; 249
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	01 97       	sbiw	r24, 0x01	; 1
 2c8:	f1 f7       	brne	.-4      	; 0x2c6 <LCD_voidSendCommand+0x84>
 2ca:	00 c0       	rjmp	.+0      	; 0x2cc <LCD_voidSendCommand+0x8a>
 2cc:	00 00       	nop
 2ce:	41 e0       	ldi	r20, 0x01	; 1
 2d0:	62 e0       	ldi	r22, 0x02	; 2
 2d2:	80 e0       	ldi	r24, 0x00	; 0
 2d4:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 2d8:	89 ef       	ldi	r24, 0xF9	; 249
 2da:	90 e0       	ldi	r25, 0x00	; 0
 2dc:	01 97       	sbiw	r24, 0x01	; 1
 2de:	f1 f7       	brne	.-4      	; 0x2dc <LCD_voidSendCommand+0x9a>
 2e0:	00 c0       	rjmp	.+0      	; 0x2e2 <LCD_voidSendCommand+0xa0>
 2e2:	00 00       	nop
 2e4:	4c 2f       	mov	r20, r28
 2e6:	41 70       	andi	r20, 0x01	; 1
 2e8:	60 e0       	ldi	r22, 0x00	; 0
 2ea:	81 e0       	ldi	r24, 0x01	; 1
 2ec:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 2f0:	c1 fb       	bst	r28, 1
 2f2:	44 27       	eor	r20, r20
 2f4:	40 f9       	bld	r20, 0
 2f6:	61 e0       	ldi	r22, 0x01	; 1
 2f8:	81 e0       	ldi	r24, 0x01	; 1
 2fa:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 2fe:	c2 fb       	bst	r28, 2
 300:	44 27       	eor	r20, r20
 302:	40 f9       	bld	r20, 0
 304:	62 e0       	ldi	r22, 0x02	; 2
 306:	81 e0       	ldi	r24, 0x01	; 1
 308:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 30c:	c3 fb       	bst	r28, 3
 30e:	44 27       	eor	r20, r20
 310:	40 f9       	bld	r20, 0
 312:	63 e0       	ldi	r22, 0x03	; 3
 314:	81 e0       	ldi	r24, 0x01	; 1
 316:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 31a:	89 ef       	ldi	r24, 0xF9	; 249
 31c:	90 e0       	ldi	r25, 0x00	; 0
 31e:	01 97       	sbiw	r24, 0x01	; 1
 320:	f1 f7       	brne	.-4      	; 0x31e <LCD_voidSendCommand+0xdc>
 322:	00 c0       	rjmp	.+0      	; 0x324 <LCD_voidSendCommand+0xe2>
 324:	00 00       	nop
 326:	40 e0       	ldi	r20, 0x00	; 0
 328:	62 e0       	ldi	r22, 0x02	; 2
 32a:	80 e0       	ldi	r24, 0x00	; 0
 32c:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 330:	89 ef       	ldi	r24, 0xF9	; 249
 332:	90 e0       	ldi	r25, 0x00	; 0
 334:	01 97       	sbiw	r24, 0x01	; 1
 336:	f1 f7       	brne	.-4      	; 0x334 <LCD_voidSendCommand+0xf2>
 338:	00 c0       	rjmp	.+0      	; 0x33a <LCD_voidSendCommand+0xf8>
 33a:	00 00       	nop
 33c:	cf 91       	pop	r28
 33e:	08 95       	ret

00000340 <LCD_voidInit>:
 340:	41 e0       	ldi	r20, 0x01	; 1
 342:	63 e0       	ldi	r22, 0x03	; 3
 344:	80 e0       	ldi	r24, 0x00	; 0
 346:	0e 94 97 03 	call	0x72e	; 0x72e <GPIO_voidSetPinDirection>
 34a:	41 e0       	ldi	r20, 0x01	; 1
 34c:	62 e0       	ldi	r22, 0x02	; 2
 34e:	80 e0       	ldi	r24, 0x00	; 0
 350:	0e 94 97 03 	call	0x72e	; 0x72e <GPIO_voidSetPinDirection>
 354:	87 e8       	ldi	r24, 0x87	; 135
 356:	93 e1       	ldi	r25, 0x13	; 19
 358:	01 97       	sbiw	r24, 0x01	; 1
 35a:	f1 f7       	brne	.-4      	; 0x358 <LCD_voidInit+0x18>
 35c:	00 c0       	rjmp	.+0      	; 0x35e <LCD_voidInit+0x1e>
 35e:	00 00       	nop
 360:	41 e0       	ldi	r20, 0x01	; 1
 362:	60 e0       	ldi	r22, 0x00	; 0
 364:	81 e0       	ldi	r24, 0x01	; 1
 366:	0e 94 97 03 	call	0x72e	; 0x72e <GPIO_voidSetPinDirection>
 36a:	41 e0       	ldi	r20, 0x01	; 1
 36c:	61 e0       	ldi	r22, 0x01	; 1
 36e:	81 e0       	ldi	r24, 0x01	; 1
 370:	0e 94 97 03 	call	0x72e	; 0x72e <GPIO_voidSetPinDirection>
 374:	41 e0       	ldi	r20, 0x01	; 1
 376:	62 e0       	ldi	r22, 0x02	; 2
 378:	81 e0       	ldi	r24, 0x01	; 1
 37a:	0e 94 97 03 	call	0x72e	; 0x72e <GPIO_voidSetPinDirection>
 37e:	41 e0       	ldi	r20, 0x01	; 1
 380:	63 e0       	ldi	r22, 0x03	; 3
 382:	81 e0       	ldi	r24, 0x01	; 1
 384:	0e 94 97 03 	call	0x72e	; 0x72e <GPIO_voidSetPinDirection>
 388:	83 e3       	ldi	r24, 0x33	; 51
 38a:	0e 94 21 01 	call	0x242	; 0x242 <LCD_voidSendCommand>
 38e:	82 e3       	ldi	r24, 0x32	; 50
 390:	0e 94 21 01 	call	0x242	; 0x242 <LCD_voidSendCommand>
 394:	88 e2       	ldi	r24, 0x28	; 40
 396:	0e 94 21 01 	call	0x242	; 0x242 <LCD_voidSendCommand>
 39a:	83 ef       	ldi	r24, 0xF3	; 243
 39c:	91 e0       	ldi	r25, 0x01	; 1
 39e:	01 97       	sbiw	r24, 0x01	; 1
 3a0:	f1 f7       	brne	.-4      	; 0x39e <LCD_voidInit+0x5e>
 3a2:	00 c0       	rjmp	.+0      	; 0x3a4 <LCD_voidInit+0x64>
 3a4:	00 00       	nop
 3a6:	8c e0       	ldi	r24, 0x0C	; 12
 3a8:	0e 94 21 01 	call	0x242	; 0x242 <LCD_voidSendCommand>
 3ac:	83 ef       	ldi	r24, 0xF3	; 243
 3ae:	91 e0       	ldi	r25, 0x01	; 1
 3b0:	01 97       	sbiw	r24, 0x01	; 1
 3b2:	f1 f7       	brne	.-4      	; 0x3b0 <LCD_voidInit+0x70>
 3b4:	00 c0       	rjmp	.+0      	; 0x3b6 <LCD_voidInit+0x76>
 3b6:	00 00       	nop
 3b8:	81 e0       	ldi	r24, 0x01	; 1
 3ba:	0e 94 21 01 	call	0x242	; 0x242 <LCD_voidSendCommand>
 3be:	83 ef       	ldi	r24, 0xF3	; 243
 3c0:	91 e0       	ldi	r25, 0x01	; 1
 3c2:	01 97       	sbiw	r24, 0x01	; 1
 3c4:	f1 f7       	brne	.-4      	; 0x3c2 <LCD_voidInit+0x82>
 3c6:	00 c0       	rjmp	.+0      	; 0x3c8 <LCD_voidInit+0x88>
 3c8:	00 00       	nop
 3ca:	08 95       	ret

000003cc <LCD_voidSendData>:
 3cc:	cf 93       	push	r28
 3ce:	c8 2f       	mov	r28, r24
 3d0:	41 e0       	ldi	r20, 0x01	; 1
 3d2:	63 e0       	ldi	r22, 0x03	; 3
 3d4:	80 e0       	ldi	r24, 0x00	; 0
 3d6:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 3da:	89 ef       	ldi	r24, 0xF9	; 249
 3dc:	90 e0       	ldi	r25, 0x00	; 0
 3de:	01 97       	sbiw	r24, 0x01	; 1
 3e0:	f1 f7       	brne	.-4      	; 0x3de <LCD_voidSendData+0x12>
 3e2:	00 c0       	rjmp	.+0      	; 0x3e4 <LCD_voidSendData+0x18>
 3e4:	00 00       	nop
 3e6:	41 e0       	ldi	r20, 0x01	; 1
 3e8:	62 e0       	ldi	r22, 0x02	; 2
 3ea:	80 e0       	ldi	r24, 0x00	; 0
 3ec:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 3f0:	89 ef       	ldi	r24, 0xF9	; 249
 3f2:	90 e0       	ldi	r25, 0x00	; 0
 3f4:	01 97       	sbiw	r24, 0x01	; 1
 3f6:	f1 f7       	brne	.-4      	; 0x3f4 <LCD_voidSendData+0x28>
 3f8:	00 c0       	rjmp	.+0      	; 0x3fa <LCD_voidSendData+0x2e>
 3fa:	00 00       	nop
 3fc:	c4 fb       	bst	r28, 4
 3fe:	44 27       	eor	r20, r20
 400:	40 f9       	bld	r20, 0
 402:	60 e0       	ldi	r22, 0x00	; 0
 404:	81 e0       	ldi	r24, 0x01	; 1
 406:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 40a:	c5 fb       	bst	r28, 5
 40c:	44 27       	eor	r20, r20
 40e:	40 f9       	bld	r20, 0
 410:	61 e0       	ldi	r22, 0x01	; 1
 412:	81 e0       	ldi	r24, 0x01	; 1
 414:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 418:	c6 fb       	bst	r28, 6
 41a:	44 27       	eor	r20, r20
 41c:	40 f9       	bld	r20, 0
 41e:	62 e0       	ldi	r22, 0x02	; 2
 420:	81 e0       	ldi	r24, 0x01	; 1
 422:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 426:	4c 2f       	mov	r20, r28
 428:	44 1f       	adc	r20, r20
 42a:	44 27       	eor	r20, r20
 42c:	44 1f       	adc	r20, r20
 42e:	63 e0       	ldi	r22, 0x03	; 3
 430:	81 e0       	ldi	r24, 0x01	; 1
 432:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 436:	89 ef       	ldi	r24, 0xF9	; 249
 438:	90 e0       	ldi	r25, 0x00	; 0
 43a:	01 97       	sbiw	r24, 0x01	; 1
 43c:	f1 f7       	brne	.-4      	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 43e:	00 c0       	rjmp	.+0      	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 440:	00 00       	nop
 442:	40 e0       	ldi	r20, 0x00	; 0
 444:	62 e0       	ldi	r22, 0x02	; 2
 446:	80 e0       	ldi	r24, 0x00	; 0
 448:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 44c:	89 ef       	ldi	r24, 0xF9	; 249
 44e:	90 e0       	ldi	r25, 0x00	; 0
 450:	01 97       	sbiw	r24, 0x01	; 1
 452:	f1 f7       	brne	.-4      	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
 454:	00 c0       	rjmp	.+0      	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
 456:	00 00       	nop
 458:	41 e0       	ldi	r20, 0x01	; 1
 45a:	62 e0       	ldi	r22, 0x02	; 2
 45c:	80 e0       	ldi	r24, 0x00	; 0
 45e:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 462:	89 ef       	ldi	r24, 0xF9	; 249
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	01 97       	sbiw	r24, 0x01	; 1
 468:	f1 f7       	brne	.-4      	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
 46a:	00 c0       	rjmp	.+0      	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
 46c:	00 00       	nop
 46e:	4c 2f       	mov	r20, r28
 470:	41 70       	andi	r20, 0x01	; 1
 472:	60 e0       	ldi	r22, 0x00	; 0
 474:	81 e0       	ldi	r24, 0x01	; 1
 476:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 47a:	c1 fb       	bst	r28, 1
 47c:	44 27       	eor	r20, r20
 47e:	40 f9       	bld	r20, 0
 480:	61 e0       	ldi	r22, 0x01	; 1
 482:	81 e0       	ldi	r24, 0x01	; 1
 484:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 488:	c2 fb       	bst	r28, 2
 48a:	44 27       	eor	r20, r20
 48c:	40 f9       	bld	r20, 0
 48e:	62 e0       	ldi	r22, 0x02	; 2
 490:	81 e0       	ldi	r24, 0x01	; 1
 492:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 496:	c3 fb       	bst	r28, 3
 498:	44 27       	eor	r20, r20
 49a:	40 f9       	bld	r20, 0
 49c:	63 e0       	ldi	r22, 0x03	; 3
 49e:	81 e0       	ldi	r24, 0x01	; 1
 4a0:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 4a4:	89 ef       	ldi	r24, 0xF9	; 249
 4a6:	90 e0       	ldi	r25, 0x00	; 0
 4a8:	01 97       	sbiw	r24, 0x01	; 1
 4aa:	f1 f7       	brne	.-4      	; 0x4a8 <__EEPROM_REGION_LENGTH__+0xa8>
 4ac:	00 c0       	rjmp	.+0      	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 4ae:	00 00       	nop
 4b0:	40 e0       	ldi	r20, 0x00	; 0
 4b2:	62 e0       	ldi	r22, 0x02	; 2
 4b4:	80 e0       	ldi	r24, 0x00	; 0
 4b6:	0e 94 1d 04 	call	0x83a	; 0x83a <GPIO_voidSetPinValue>
 4ba:	89 ef       	ldi	r24, 0xF9	; 249
 4bc:	90 e0       	ldi	r25, 0x00	; 0
 4be:	01 97       	sbiw	r24, 0x01	; 1
 4c0:	f1 f7       	brne	.-4      	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 4c2:	00 c0       	rjmp	.+0      	; 0x4c4 <__EEPROM_REGION_LENGTH__+0xc4>
 4c4:	00 00       	nop
 4c6:	cf 91       	pop	r28
 4c8:	08 95       	ret

000004ca <LCD_voidDisplayString>:
 4ca:	0f 93       	push	r16
 4cc:	1f 93       	push	r17
 4ce:	cf 93       	push	r28
 4d0:	8c 01       	movw	r16, r24
 4d2:	c0 e0       	ldi	r28, 0x00	; 0
 4d4:	03 c0       	rjmp	.+6      	; 0x4dc <LCD_voidDisplayString+0x12>
 4d6:	0e 94 e6 01 	call	0x3cc	; 0x3cc <LCD_voidSendData>
 4da:	cf 5f       	subi	r28, 0xFF	; 255
 4dc:	f8 01       	movw	r30, r16
 4de:	ec 0f       	add	r30, r28
 4e0:	f1 1d       	adc	r31, r1
 4e2:	80 81       	ld	r24, Z
 4e4:	81 11       	cpse	r24, r1
 4e6:	f7 cf       	rjmp	.-18     	; 0x4d6 <LCD_voidDisplayString+0xc>
 4e8:	cf 91       	pop	r28
 4ea:	1f 91       	pop	r17
 4ec:	0f 91       	pop	r16
 4ee:	08 95       	ret

000004f0 <LCD_voidSetCursor>:
 4f0:	81 30       	cpi	r24, 0x01	; 1
 4f2:	31 f0       	breq	.+12     	; 0x500 <LCD_voidSetCursor+0x10>
 4f4:	70 f0       	brcs	.+28     	; 0x512 <LCD_voidSetCursor+0x22>
 4f6:	82 30       	cpi	r24, 0x02	; 2
 4f8:	31 f0       	breq	.+12     	; 0x506 <LCD_voidSetCursor+0x16>
 4fa:	83 30       	cpi	r24, 0x03	; 3
 4fc:	39 f0       	breq	.+14     	; 0x50c <LCD_voidSetCursor+0x1c>
 4fe:	0a c0       	rjmp	.+20     	; 0x514 <LCD_voidSetCursor+0x24>
 500:	90 e4       	ldi	r25, 0x40	; 64
 502:	96 0f       	add	r25, r22
 504:	07 c0       	rjmp	.+14     	; 0x514 <LCD_voidSetCursor+0x24>
 506:	90 e1       	ldi	r25, 0x10	; 16
 508:	96 0f       	add	r25, r22
 50a:	04 c0       	rjmp	.+8      	; 0x514 <LCD_voidSetCursor+0x24>
 50c:	90 e5       	ldi	r25, 0x50	; 80
 50e:	96 0f       	add	r25, r22
 510:	01 c0       	rjmp	.+2      	; 0x514 <LCD_voidSetCursor+0x24>
 512:	96 2f       	mov	r25, r22
 514:	89 2f       	mov	r24, r25
 516:	80 68       	ori	r24, 0x80	; 128
 518:	0e 94 21 01 	call	0x242	; 0x242 <LCD_voidSendCommand>
 51c:	08 95       	ret

0000051e <LCD_voidIntgerToString>:
 51e:	cf 93       	push	r28
 520:	df 93       	push	r29
 522:	cd b7       	in	r28, 0x3d	; 61
 524:	de b7       	in	r29, 0x3e	; 62
 526:	60 97       	sbiw	r28, 0x10	; 16
 528:	0f b6       	in	r0, 0x3f	; 63
 52a:	f8 94       	cli
 52c:	de bf       	out	0x3e, r29	; 62
 52e:	0f be       	out	0x3f, r0	; 63
 530:	cd bf       	out	0x3d, r28	; 61
 532:	dc 01       	movw	r26, r24
 534:	cb 01       	movw	r24, r22
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 536:	4a e0       	ldi	r20, 0x0A	; 10
 538:	be 01       	movw	r22, r28
 53a:	6f 5f       	subi	r22, 0xFF	; 255
 53c:	7f 4f       	sbci	r23, 0xFF	; 255
 53e:	0e 94 b2 06 	call	0xd64	; 0xd64 <__itoa_ncheck>
 542:	ce 01       	movw	r24, r28
 544:	01 96       	adiw	r24, 0x01	; 1
 546:	0e 94 65 02 	call	0x4ca	; 0x4ca <LCD_voidDisplayString>
 54a:	60 96       	adiw	r28, 0x10	; 16
 54c:	0f b6       	in	r0, 0x3f	; 63
 54e:	f8 94       	cli
 550:	de bf       	out	0x3e, r29	; 62
 552:	0f be       	out	0x3f, r0	; 63
 554:	cd bf       	out	0x3d, r28	; 61
 556:	df 91       	pop	r29
 558:	cf 91       	pop	r28
 55a:	08 95       	ret

0000055c <ADC_voidInit>:
 55c:	87 b1       	in	r24, 0x07	; 7
 55e:	8f 73       	andi	r24, 0x3F	; 63
 560:	80 64       	ori	r24, 0x40	; 64
 562:	87 b9       	out	0x07, r24	; 7
 564:	87 b1       	in	r24, 0x07	; 7
 566:	8f 7d       	andi	r24, 0xDF	; 223
 568:	87 b9       	out	0x07, r24	; 7
 56a:	86 b1       	in	r24, 0x06	; 6
 56c:	80 68       	ori	r24, 0x80	; 128
 56e:	86 b9       	out	0x06, r24	; 6
 570:	86 b1       	in	r24, 0x06	; 6
 572:	87 60       	ori	r24, 0x07	; 7
 574:	86 b9       	out	0x06, r24	; 6
 576:	86 b1       	in	r24, 0x06	; 6
 578:	8f 7d       	andi	r24, 0xDF	; 223
 57a:	86 b9       	out	0x06, r24	; 6
 57c:	80 b7       	in	r24, 0x30	; 48
 57e:	8f 71       	andi	r24, 0x1F	; 31
 580:	80 bf       	out	0x30, r24	; 48
 582:	08 95       	ret

00000584 <ADC_voidStartConversionPolling>:
 584:	8f 71       	andi	r24, 0x1F	; 31
 586:	97 b1       	in	r25, 0x07	; 7
 588:	90 7e       	andi	r25, 0xE0	; 224
 58a:	89 2b       	or	r24, r25
 58c:	87 b9       	out	0x07, r24	; 7
 58e:	86 b1       	in	r24, 0x06	; 6
 590:	80 64       	ori	r24, 0x40	; 64
 592:	86 b9       	out	0x06, r24	; 6
 594:	34 9b       	sbis	0x06, 4	; 6
 596:	fe cf       	rjmp	.-4      	; 0x594 <ADC_voidStartConversionPolling+0x10>
 598:	86 b1       	in	r24, 0x06	; 6
 59a:	80 61       	ori	r24, 0x10	; 16
 59c:	86 b9       	out	0x06, r24	; 6
 59e:	84 b1       	in	r24, 0x04	; 4
 5a0:	95 b1       	in	r25, 0x05	; 5
 5a2:	08 95       	ret

000005a4 <ADC_u16ReadVoltage>:
 5a4:	0e 94 c2 02 	call	0x584	; 0x584 <ADC_voidStartConversionPolling>
 5a8:	9c 01       	movw	r18, r24
 5aa:	a8 e8       	ldi	r26, 0x88	; 136
 5ac:	b3 e1       	ldi	r27, 0x13	; 19
 5ae:	0e 94 a3 06 	call	0xd46	; 0xd46 <__umulhisi3>
 5b2:	2f ef       	ldi	r18, 0xFF	; 255
 5b4:	33 e0       	ldi	r19, 0x03	; 3
 5b6:	40 e0       	ldi	r20, 0x00	; 0
 5b8:	50 e0       	ldi	r21, 0x00	; 0
 5ba:	0e 94 81 06 	call	0xd02	; 0xd02 <__udivmodsi4>
 5be:	c9 01       	movw	r24, r18
 5c0:	08 95       	ret

000005c2 <ADC_u16ReadTemperature>:
 5c2:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <ADC_u16ReadVoltage>
 5c6:	9c 01       	movw	r18, r24
 5c8:	ad ec       	ldi	r26, 0xCD	; 205
 5ca:	bc ec       	ldi	r27, 0xCC	; 204
 5cc:	0e 94 a3 06 	call	0xd46	; 0xd46 <__umulhisi3>
 5d0:	96 95       	lsr	r25
 5d2:	87 95       	ror	r24
 5d4:	96 95       	lsr	r25
 5d6:	87 95       	ror	r24
 5d8:	96 95       	lsr	r25
 5da:	87 95       	ror	r24
 5dc:	08 95       	ret

000005de <__vector_16>:
 5de:	1f 92       	push	r1
 5e0:	0f 92       	push	r0
 5e2:	0f b6       	in	r0, 0x3f	; 63
 5e4:	0f 92       	push	r0
 5e6:	11 24       	eor	r1, r1
 5e8:	2f 93       	push	r18
 5ea:	3f 93       	push	r19
 5ec:	4f 93       	push	r20
 5ee:	5f 93       	push	r21
 5f0:	6f 93       	push	r22
 5f2:	7f 93       	push	r23
 5f4:	8f 93       	push	r24
 5f6:	9f 93       	push	r25
 5f8:	af 93       	push	r26
 5fa:	bf 93       	push	r27
 5fc:	ef 93       	push	r30
 5fe:	ff 93       	push	r31
 600:	e0 91 93 00 	lds	r30, 0x0093	; 0x800093 <CallBackPtr_ADC>
 604:	f0 91 94 00 	lds	r31, 0x0094	; 0x800094 <CallBackPtr_ADC+0x1>
 608:	30 97       	sbiw	r30, 0x00	; 0
 60a:	09 f0       	breq	.+2      	; 0x60e <__vector_16+0x30>
 60c:	09 95       	icall
 60e:	ff 91       	pop	r31
 610:	ef 91       	pop	r30
 612:	bf 91       	pop	r27
 614:	af 91       	pop	r26
 616:	9f 91       	pop	r25
 618:	8f 91       	pop	r24
 61a:	7f 91       	pop	r23
 61c:	6f 91       	pop	r22
 61e:	5f 91       	pop	r21
 620:	4f 91       	pop	r20
 622:	3f 91       	pop	r19
 624:	2f 91       	pop	r18
 626:	0f 90       	pop	r0
 628:	0f be       	out	0x3f, r0	; 63
 62a:	0f 90       	pop	r0
 62c:	1f 90       	pop	r1
 62e:	18 95       	reti

00000630 <__vector_1>:
 630:	1f 92       	push	r1
 632:	0f 92       	push	r0
 634:	0f b6       	in	r0, 0x3f	; 63
 636:	0f 92       	push	r0
 638:	11 24       	eor	r1, r1
 63a:	2f 93       	push	r18
 63c:	3f 93       	push	r19
 63e:	4f 93       	push	r20
 640:	5f 93       	push	r21
 642:	6f 93       	push	r22
 644:	7f 93       	push	r23
 646:	8f 93       	push	r24
 648:	9f 93       	push	r25
 64a:	af 93       	push	r26
 64c:	bf 93       	push	r27
 64e:	ef 93       	push	r30
 650:	ff 93       	push	r31
 652:	e0 91 97 00 	lds	r30, 0x0097	; 0x800097 <CallBackPtr_INT0>
 656:	f0 91 98 00 	lds	r31, 0x0098	; 0x800098 <CallBackPtr_INT0+0x1>
 65a:	30 97       	sbiw	r30, 0x00	; 0
 65c:	09 f0       	breq	.+2      	; 0x660 <__vector_1+0x30>
 65e:	09 95       	icall
 660:	ff 91       	pop	r31
 662:	ef 91       	pop	r30
 664:	bf 91       	pop	r27
 666:	af 91       	pop	r26
 668:	9f 91       	pop	r25
 66a:	8f 91       	pop	r24
 66c:	7f 91       	pop	r23
 66e:	6f 91       	pop	r22
 670:	5f 91       	pop	r21
 672:	4f 91       	pop	r20
 674:	3f 91       	pop	r19
 676:	2f 91       	pop	r18
 678:	0f 90       	pop	r0
 67a:	0f be       	out	0x3f, r0	; 63
 67c:	0f 90       	pop	r0
 67e:	1f 90       	pop	r1
 680:	18 95       	reti

00000682 <__vector_2>:
 682:	1f 92       	push	r1
 684:	0f 92       	push	r0
 686:	0f b6       	in	r0, 0x3f	; 63
 688:	0f 92       	push	r0
 68a:	11 24       	eor	r1, r1
 68c:	2f 93       	push	r18
 68e:	3f 93       	push	r19
 690:	4f 93       	push	r20
 692:	5f 93       	push	r21
 694:	6f 93       	push	r22
 696:	7f 93       	push	r23
 698:	8f 93       	push	r24
 69a:	9f 93       	push	r25
 69c:	af 93       	push	r26
 69e:	bf 93       	push	r27
 6a0:	ef 93       	push	r30
 6a2:	ff 93       	push	r31
 6a4:	e0 91 99 00 	lds	r30, 0x0099	; 0x800099 <CallBackPtr_INT1>
 6a8:	f0 91 9a 00 	lds	r31, 0x009A	; 0x80009a <CallBackPtr_INT1+0x1>
 6ac:	30 97       	sbiw	r30, 0x00	; 0
 6ae:	09 f0       	breq	.+2      	; 0x6b2 <__vector_2+0x30>
 6b0:	09 95       	icall
 6b2:	ff 91       	pop	r31
 6b4:	ef 91       	pop	r30
 6b6:	bf 91       	pop	r27
 6b8:	af 91       	pop	r26
 6ba:	9f 91       	pop	r25
 6bc:	8f 91       	pop	r24
 6be:	7f 91       	pop	r23
 6c0:	6f 91       	pop	r22
 6c2:	5f 91       	pop	r21
 6c4:	4f 91       	pop	r20
 6c6:	3f 91       	pop	r19
 6c8:	2f 91       	pop	r18
 6ca:	0f 90       	pop	r0
 6cc:	0f be       	out	0x3f, r0	; 63
 6ce:	0f 90       	pop	r0
 6d0:	1f 90       	pop	r1
 6d2:	18 95       	reti

000006d4 <__vector_3>:
 6d4:	1f 92       	push	r1
 6d6:	0f 92       	push	r0
 6d8:	0f b6       	in	r0, 0x3f	; 63
 6da:	0f 92       	push	r0
 6dc:	11 24       	eor	r1, r1
 6de:	2f 93       	push	r18
 6e0:	3f 93       	push	r19
 6e2:	4f 93       	push	r20
 6e4:	5f 93       	push	r21
 6e6:	6f 93       	push	r22
 6e8:	7f 93       	push	r23
 6ea:	8f 93       	push	r24
 6ec:	9f 93       	push	r25
 6ee:	af 93       	push	r26
 6f0:	bf 93       	push	r27
 6f2:	ef 93       	push	r30
 6f4:	ff 93       	push	r31
 6f6:	e0 91 95 00 	lds	r30, 0x0095	; 0x800095 <CallBackPtr_INT2>
 6fa:	f0 91 96 00 	lds	r31, 0x0096	; 0x800096 <CallBackPtr_INT2+0x1>
 6fe:	30 97       	sbiw	r30, 0x00	; 0
 700:	09 f0       	breq	.+2      	; 0x704 <__vector_3+0x30>
 702:	09 95       	icall
 704:	ff 91       	pop	r31
 706:	ef 91       	pop	r30
 708:	bf 91       	pop	r27
 70a:	af 91       	pop	r26
 70c:	9f 91       	pop	r25
 70e:	8f 91       	pop	r24
 710:	7f 91       	pop	r23
 712:	6f 91       	pop	r22
 714:	5f 91       	pop	r21
 716:	4f 91       	pop	r20
 718:	3f 91       	pop	r19
 71a:	2f 91       	pop	r18
 71c:	0f 90       	pop	r0
 71e:	0f be       	out	0x3f, r0	; 63
 720:	0f 90       	pop	r0
 722:	1f 90       	pop	r1
 724:	18 95       	reti

00000726 <GLOBINT_voidSetEnableFlag>:
 726:	8f b7       	in	r24, 0x3f	; 63
 728:	80 68       	ori	r24, 0x80	; 128
 72a:	8f bf       	out	0x3f, r24	; 63
 72c:	08 95       	ret

0000072e <GPIO_voidSetPinDirection>:
 72e:	68 30       	cpi	r22, 0x08	; 8
 730:	08 f0       	brcs	.+2      	; 0x734 <GPIO_voidSetPinDirection+0x6>
 732:	7b c0       	rjmp	.+246    	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
 734:	84 30       	cpi	r24, 0x04	; 4
 736:	08 f0       	brcs	.+2      	; 0x73a <GPIO_voidSetPinDirection+0xc>
 738:	7a c0       	rjmp	.+244    	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
 73a:	42 30       	cpi	r20, 0x02	; 2
 73c:	08 f0       	brcs	.+2      	; 0x740 <GPIO_voidSetPinDirection+0x12>
 73e:	79 c0       	rjmp	.+242    	; 0x832 <__DATA_REGION_LENGTH__+0x32>
 740:	81 30       	cpi	r24, 0x01	; 1
 742:	11 f1       	breq	.+68     	; 0x788 <GPIO_voidSetPinDirection+0x5a>
 744:	30 f0       	brcs	.+12     	; 0x752 <GPIO_voidSetPinDirection+0x24>
 746:	82 30       	cpi	r24, 0x02	; 2
 748:	d1 f1       	breq	.+116    	; 0x7be <GPIO_voidSetPinDirection+0x90>
 74a:	83 30       	cpi	r24, 0x03	; 3
 74c:	09 f4       	brne	.+2      	; 0x750 <GPIO_voidSetPinDirection+0x22>
 74e:	52 c0       	rjmp	.+164    	; 0x7f4 <GPIO_voidSetPinDirection+0xc6>
 750:	72 c0       	rjmp	.+228    	; 0x836 <__DATA_REGION_LENGTH__+0x36>
 752:	41 30       	cpi	r20, 0x01	; 1
 754:	61 f4       	brne	.+24     	; 0x76e <GPIO_voidSetPinDirection+0x40>
 756:	2a b3       	in	r18, 0x1a	; 26
 758:	81 e0       	ldi	r24, 0x01	; 1
 75a:	90 e0       	ldi	r25, 0x00	; 0
 75c:	02 c0       	rjmp	.+4      	; 0x762 <GPIO_voidSetPinDirection+0x34>
 75e:	88 0f       	add	r24, r24
 760:	99 1f       	adc	r25, r25
 762:	6a 95       	dec	r22
 764:	e2 f7       	brpl	.-8      	; 0x75e <GPIO_voidSetPinDirection+0x30>
 766:	82 2b       	or	r24, r18
 768:	8a bb       	out	0x1a, r24	; 26
 76a:	80 e0       	ldi	r24, 0x00	; 0
 76c:	08 95       	ret
 76e:	2a b3       	in	r18, 0x1a	; 26
 770:	81 e0       	ldi	r24, 0x01	; 1
 772:	90 e0       	ldi	r25, 0x00	; 0
 774:	02 c0       	rjmp	.+4      	; 0x77a <GPIO_voidSetPinDirection+0x4c>
 776:	88 0f       	add	r24, r24
 778:	99 1f       	adc	r25, r25
 77a:	6a 95       	dec	r22
 77c:	e2 f7       	brpl	.-8      	; 0x776 <GPIO_voidSetPinDirection+0x48>
 77e:	80 95       	com	r24
 780:	82 23       	and	r24, r18
 782:	8a bb       	out	0x1a, r24	; 26
 784:	80 e0       	ldi	r24, 0x00	; 0
 786:	08 95       	ret
 788:	41 30       	cpi	r20, 0x01	; 1
 78a:	61 f4       	brne	.+24     	; 0x7a4 <GPIO_voidSetPinDirection+0x76>
 78c:	27 b3       	in	r18, 0x17	; 23
 78e:	81 e0       	ldi	r24, 0x01	; 1
 790:	90 e0       	ldi	r25, 0x00	; 0
 792:	02 c0       	rjmp	.+4      	; 0x798 <GPIO_voidSetPinDirection+0x6a>
 794:	88 0f       	add	r24, r24
 796:	99 1f       	adc	r25, r25
 798:	6a 95       	dec	r22
 79a:	e2 f7       	brpl	.-8      	; 0x794 <GPIO_voidSetPinDirection+0x66>
 79c:	82 2b       	or	r24, r18
 79e:	87 bb       	out	0x17, r24	; 23
 7a0:	80 e0       	ldi	r24, 0x00	; 0
 7a2:	08 95       	ret
 7a4:	27 b3       	in	r18, 0x17	; 23
 7a6:	81 e0       	ldi	r24, 0x01	; 1
 7a8:	90 e0       	ldi	r25, 0x00	; 0
 7aa:	02 c0       	rjmp	.+4      	; 0x7b0 <GPIO_voidSetPinDirection+0x82>
 7ac:	88 0f       	add	r24, r24
 7ae:	99 1f       	adc	r25, r25
 7b0:	6a 95       	dec	r22
 7b2:	e2 f7       	brpl	.-8      	; 0x7ac <GPIO_voidSetPinDirection+0x7e>
 7b4:	80 95       	com	r24
 7b6:	82 23       	and	r24, r18
 7b8:	87 bb       	out	0x17, r24	; 23
 7ba:	80 e0       	ldi	r24, 0x00	; 0
 7bc:	08 95       	ret
 7be:	41 30       	cpi	r20, 0x01	; 1
 7c0:	61 f4       	brne	.+24     	; 0x7da <GPIO_voidSetPinDirection+0xac>
 7c2:	24 b3       	in	r18, 0x14	; 20
 7c4:	81 e0       	ldi	r24, 0x01	; 1
 7c6:	90 e0       	ldi	r25, 0x00	; 0
 7c8:	02 c0       	rjmp	.+4      	; 0x7ce <GPIO_voidSetPinDirection+0xa0>
 7ca:	88 0f       	add	r24, r24
 7cc:	99 1f       	adc	r25, r25
 7ce:	6a 95       	dec	r22
 7d0:	e2 f7       	brpl	.-8      	; 0x7ca <GPIO_voidSetPinDirection+0x9c>
 7d2:	82 2b       	or	r24, r18
 7d4:	84 bb       	out	0x14, r24	; 20
 7d6:	80 e0       	ldi	r24, 0x00	; 0
 7d8:	08 95       	ret
 7da:	24 b3       	in	r18, 0x14	; 20
 7dc:	81 e0       	ldi	r24, 0x01	; 1
 7de:	90 e0       	ldi	r25, 0x00	; 0
 7e0:	02 c0       	rjmp	.+4      	; 0x7e6 <GPIO_voidSetPinDirection+0xb8>
 7e2:	88 0f       	add	r24, r24
 7e4:	99 1f       	adc	r25, r25
 7e6:	6a 95       	dec	r22
 7e8:	e2 f7       	brpl	.-8      	; 0x7e2 <GPIO_voidSetPinDirection+0xb4>
 7ea:	80 95       	com	r24
 7ec:	82 23       	and	r24, r18
 7ee:	84 bb       	out	0x14, r24	; 20
 7f0:	80 e0       	ldi	r24, 0x00	; 0
 7f2:	08 95       	ret
 7f4:	41 30       	cpi	r20, 0x01	; 1
 7f6:	61 f4       	brne	.+24     	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 7f8:	21 b3       	in	r18, 0x11	; 17
 7fa:	81 e0       	ldi	r24, 0x01	; 1
 7fc:	90 e0       	ldi	r25, 0x00	; 0
 7fe:	02 c0       	rjmp	.+4      	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 800:	88 0f       	add	r24, r24
 802:	99 1f       	adc	r25, r25
 804:	6a 95       	dec	r22
 806:	e2 f7       	brpl	.-8      	; 0x800 <__DATA_REGION_LENGTH__>
 808:	82 2b       	or	r24, r18
 80a:	81 bb       	out	0x11, r24	; 17
 80c:	80 e0       	ldi	r24, 0x00	; 0
 80e:	08 95       	ret
 810:	21 b3       	in	r18, 0x11	; 17
 812:	81 e0       	ldi	r24, 0x01	; 1
 814:	90 e0       	ldi	r25, 0x00	; 0
 816:	02 c0       	rjmp	.+4      	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
 818:	88 0f       	add	r24, r24
 81a:	99 1f       	adc	r25, r25
 81c:	6a 95       	dec	r22
 81e:	e2 f7       	brpl	.-8      	; 0x818 <__DATA_REGION_LENGTH__+0x18>
 820:	80 95       	com	r24
 822:	82 23       	and	r24, r18
 824:	81 bb       	out	0x11, r24	; 17
 826:	80 e0       	ldi	r24, 0x00	; 0
 828:	08 95       	ret
 82a:	81 e0       	ldi	r24, 0x01	; 1
 82c:	08 95       	ret
 82e:	82 e0       	ldi	r24, 0x02	; 2
 830:	08 95       	ret
 832:	83 e0       	ldi	r24, 0x03	; 3
 834:	08 95       	ret
 836:	80 e0       	ldi	r24, 0x00	; 0
 838:	08 95       	ret

0000083a <GPIO_voidSetPinValue>:
 83a:	68 30       	cpi	r22, 0x08	; 8
 83c:	08 f0       	brcs	.+2      	; 0x840 <GPIO_voidSetPinValue+0x6>
 83e:	7b c0       	rjmp	.+246    	; 0x936 <__stack+0xd7>
 840:	84 30       	cpi	r24, 0x04	; 4
 842:	08 f0       	brcs	.+2      	; 0x846 <GPIO_voidSetPinValue+0xc>
 844:	7a c0       	rjmp	.+244    	; 0x93a <__stack+0xdb>
 846:	42 30       	cpi	r20, 0x02	; 2
 848:	08 f0       	brcs	.+2      	; 0x84c <GPIO_voidSetPinValue+0x12>
 84a:	79 c0       	rjmp	.+242    	; 0x93e <__stack+0xdf>
 84c:	81 30       	cpi	r24, 0x01	; 1
 84e:	11 f1       	breq	.+68     	; 0x894 <__stack+0x35>
 850:	30 f0       	brcs	.+12     	; 0x85e <GPIO_voidSetPinValue+0x24>
 852:	82 30       	cpi	r24, 0x02	; 2
 854:	d1 f1       	breq	.+116    	; 0x8ca <__stack+0x6b>
 856:	83 30       	cpi	r24, 0x03	; 3
 858:	09 f4       	brne	.+2      	; 0x85c <GPIO_voidSetPinValue+0x22>
 85a:	52 c0       	rjmp	.+164    	; 0x900 <__stack+0xa1>
 85c:	72 c0       	rjmp	.+228    	; 0x942 <__stack+0xe3>
 85e:	41 30       	cpi	r20, 0x01	; 1
 860:	61 f4       	brne	.+24     	; 0x87a <__stack+0x1b>
 862:	2b b3       	in	r18, 0x1b	; 27
 864:	81 e0       	ldi	r24, 0x01	; 1
 866:	90 e0       	ldi	r25, 0x00	; 0
 868:	02 c0       	rjmp	.+4      	; 0x86e <__stack+0xf>
 86a:	88 0f       	add	r24, r24
 86c:	99 1f       	adc	r25, r25
 86e:	6a 95       	dec	r22
 870:	e2 f7       	brpl	.-8      	; 0x86a <__stack+0xb>
 872:	82 2b       	or	r24, r18
 874:	8b bb       	out	0x1b, r24	; 27
 876:	80 e0       	ldi	r24, 0x00	; 0
 878:	08 95       	ret
 87a:	2b b3       	in	r18, 0x1b	; 27
 87c:	81 e0       	ldi	r24, 0x01	; 1
 87e:	90 e0       	ldi	r25, 0x00	; 0
 880:	02 c0       	rjmp	.+4      	; 0x886 <__stack+0x27>
 882:	88 0f       	add	r24, r24
 884:	99 1f       	adc	r25, r25
 886:	6a 95       	dec	r22
 888:	e2 f7       	brpl	.-8      	; 0x882 <__stack+0x23>
 88a:	80 95       	com	r24
 88c:	82 23       	and	r24, r18
 88e:	8b bb       	out	0x1b, r24	; 27
 890:	80 e0       	ldi	r24, 0x00	; 0
 892:	08 95       	ret
 894:	41 30       	cpi	r20, 0x01	; 1
 896:	61 f4       	brne	.+24     	; 0x8b0 <__stack+0x51>
 898:	28 b3       	in	r18, 0x18	; 24
 89a:	81 e0       	ldi	r24, 0x01	; 1
 89c:	90 e0       	ldi	r25, 0x00	; 0
 89e:	02 c0       	rjmp	.+4      	; 0x8a4 <__stack+0x45>
 8a0:	88 0f       	add	r24, r24
 8a2:	99 1f       	adc	r25, r25
 8a4:	6a 95       	dec	r22
 8a6:	e2 f7       	brpl	.-8      	; 0x8a0 <__stack+0x41>
 8a8:	82 2b       	or	r24, r18
 8aa:	88 bb       	out	0x18, r24	; 24
 8ac:	80 e0       	ldi	r24, 0x00	; 0
 8ae:	08 95       	ret
 8b0:	28 b3       	in	r18, 0x18	; 24
 8b2:	81 e0       	ldi	r24, 0x01	; 1
 8b4:	90 e0       	ldi	r25, 0x00	; 0
 8b6:	02 c0       	rjmp	.+4      	; 0x8bc <__stack+0x5d>
 8b8:	88 0f       	add	r24, r24
 8ba:	99 1f       	adc	r25, r25
 8bc:	6a 95       	dec	r22
 8be:	e2 f7       	brpl	.-8      	; 0x8b8 <__stack+0x59>
 8c0:	80 95       	com	r24
 8c2:	82 23       	and	r24, r18
 8c4:	88 bb       	out	0x18, r24	; 24
 8c6:	80 e0       	ldi	r24, 0x00	; 0
 8c8:	08 95       	ret
 8ca:	41 30       	cpi	r20, 0x01	; 1
 8cc:	61 f4       	brne	.+24     	; 0x8e6 <__stack+0x87>
 8ce:	25 b3       	in	r18, 0x15	; 21
 8d0:	81 e0       	ldi	r24, 0x01	; 1
 8d2:	90 e0       	ldi	r25, 0x00	; 0
 8d4:	02 c0       	rjmp	.+4      	; 0x8da <__stack+0x7b>
 8d6:	88 0f       	add	r24, r24
 8d8:	99 1f       	adc	r25, r25
 8da:	6a 95       	dec	r22
 8dc:	e2 f7       	brpl	.-8      	; 0x8d6 <__stack+0x77>
 8de:	82 2b       	or	r24, r18
 8e0:	85 bb       	out	0x15, r24	; 21
 8e2:	80 e0       	ldi	r24, 0x00	; 0
 8e4:	08 95       	ret
 8e6:	25 b3       	in	r18, 0x15	; 21
 8e8:	81 e0       	ldi	r24, 0x01	; 1
 8ea:	90 e0       	ldi	r25, 0x00	; 0
 8ec:	02 c0       	rjmp	.+4      	; 0x8f2 <__stack+0x93>
 8ee:	88 0f       	add	r24, r24
 8f0:	99 1f       	adc	r25, r25
 8f2:	6a 95       	dec	r22
 8f4:	e2 f7       	brpl	.-8      	; 0x8ee <__stack+0x8f>
 8f6:	80 95       	com	r24
 8f8:	82 23       	and	r24, r18
 8fa:	85 bb       	out	0x15, r24	; 21
 8fc:	80 e0       	ldi	r24, 0x00	; 0
 8fe:	08 95       	ret
 900:	41 30       	cpi	r20, 0x01	; 1
 902:	61 f4       	brne	.+24     	; 0x91c <__stack+0xbd>
 904:	22 b3       	in	r18, 0x12	; 18
 906:	81 e0       	ldi	r24, 0x01	; 1
 908:	90 e0       	ldi	r25, 0x00	; 0
 90a:	02 c0       	rjmp	.+4      	; 0x910 <__stack+0xb1>
 90c:	88 0f       	add	r24, r24
 90e:	99 1f       	adc	r25, r25
 910:	6a 95       	dec	r22
 912:	e2 f7       	brpl	.-8      	; 0x90c <__stack+0xad>
 914:	82 2b       	or	r24, r18
 916:	82 bb       	out	0x12, r24	; 18
 918:	80 e0       	ldi	r24, 0x00	; 0
 91a:	08 95       	ret
 91c:	22 b3       	in	r18, 0x12	; 18
 91e:	81 e0       	ldi	r24, 0x01	; 1
 920:	90 e0       	ldi	r25, 0x00	; 0
 922:	02 c0       	rjmp	.+4      	; 0x928 <__stack+0xc9>
 924:	88 0f       	add	r24, r24
 926:	99 1f       	adc	r25, r25
 928:	6a 95       	dec	r22
 92a:	e2 f7       	brpl	.-8      	; 0x924 <__stack+0xc5>
 92c:	80 95       	com	r24
 92e:	82 23       	and	r24, r18
 930:	82 bb       	out	0x12, r24	; 18
 932:	80 e0       	ldi	r24, 0x00	; 0
 934:	08 95       	ret
 936:	81 e0       	ldi	r24, 0x01	; 1
 938:	08 95       	ret
 93a:	82 e0       	ldi	r24, 0x02	; 2
 93c:	08 95       	ret
 93e:	83 e0       	ldi	r24, 0x03	; 3
 940:	08 95       	ret
 942:	80 e0       	ldi	r24, 0x00	; 0
 944:	08 95       	ret

00000946 <SPI_voidInitialization_Master>:
 946:	41 e0       	ldi	r20, 0x01	; 1
 948:	64 e0       	ldi	r22, 0x04	; 4
 94a:	81 e0       	ldi	r24, 0x01	; 1
 94c:	0e 94 97 03 	call	0x72e	; 0x72e <GPIO_voidSetPinDirection>
 950:	41 e0       	ldi	r20, 0x01	; 1
 952:	65 e0       	ldi	r22, 0x05	; 5
 954:	81 e0       	ldi	r24, 0x01	; 1
 956:	0e 94 97 03 	call	0x72e	; 0x72e <GPIO_voidSetPinDirection>
 95a:	40 e0       	ldi	r20, 0x00	; 0
 95c:	66 e0       	ldi	r22, 0x06	; 6
 95e:	81 e0       	ldi	r24, 0x01	; 1
 960:	0e 94 97 03 	call	0x72e	; 0x72e <GPIO_voidSetPinDirection>
 964:	41 e0       	ldi	r20, 0x01	; 1
 966:	67 e0       	ldi	r22, 0x07	; 7
 968:	81 e0       	ldi	r24, 0x01	; 1
 96a:	0e 94 97 03 	call	0x72e	; 0x72e <GPIO_voidSetPinDirection>
 96e:	8d b1       	in	r24, 0x0d	; 13
 970:	80 64       	ori	r24, 0x40	; 64
 972:	8d b9       	out	0x0d, r24	; 13
 974:	8d b1       	in	r24, 0x0d	; 13
 976:	80 61       	ori	r24, 0x10	; 16
 978:	8d b9       	out	0x0d, r24	; 13
 97a:	8d b1       	in	r24, 0x0d	; 13
 97c:	8c 7f       	andi	r24, 0xFC	; 252
 97e:	8d b9       	out	0x0d, r24	; 13
 980:	8d b1       	in	r24, 0x0d	; 13
 982:	8f 7d       	andi	r24, 0xDF	; 223
 984:	8d b9       	out	0x0d, r24	; 13
 986:	8e b1       	in	r24, 0x0e	; 14
 988:	8e 7f       	andi	r24, 0xFE	; 254
 98a:	8e b9       	out	0x0e, r24	; 14
 98c:	8d b1       	in	r24, 0x0d	; 13
 98e:	80 68       	ori	r24, 0x80	; 128
 990:	8d b9       	out	0x0d, r24	; 13
 992:	08 95       	ret

00000994 <SPI_u8SendByte_Polling>:
 994:	8f b9       	out	0x0f, r24	; 15
 996:	77 9b       	sbis	0x0e, 7	; 14
 998:	fe cf       	rjmp	.-4      	; 0x996 <SPI_u8SendByte_Polling+0x2>
 99a:	8e b1       	in	r24, 0x0e	; 14
 99c:	80 68       	ori	r24, 0x80	; 128
 99e:	8e b9       	out	0x0e, r24	; 14
 9a0:	8f b1       	in	r24, 0x0f	; 15
 9a2:	08 95       	ret

000009a4 <__vector_12>:
 9a4:	1f 92       	push	r1
 9a6:	0f 92       	push	r0
 9a8:	0f b6       	in	r0, 0x3f	; 63
 9aa:	0f 92       	push	r0
 9ac:	11 24       	eor	r1, r1
 9ae:	2f 93       	push	r18
 9b0:	3f 93       	push	r19
 9b2:	4f 93       	push	r20
 9b4:	5f 93       	push	r21
 9b6:	6f 93       	push	r22
 9b8:	7f 93       	push	r23
 9ba:	8f 93       	push	r24
 9bc:	9f 93       	push	r25
 9be:	af 93       	push	r26
 9c0:	bf 93       	push	r27
 9c2:	ef 93       	push	r30
 9c4:	ff 93       	push	r31
 9c6:	e0 91 9b 00 	lds	r30, 0x009B	; 0x80009b <CallBackPtr_SPI>
 9ca:	f0 91 9c 00 	lds	r31, 0x009C	; 0x80009c <CallBackPtr_SPI+0x1>
 9ce:	30 97       	sbiw	r30, 0x00	; 0
 9d0:	09 f0       	breq	.+2      	; 0x9d4 <__vector_12+0x30>
 9d2:	09 95       	icall
 9d4:	ff 91       	pop	r31
 9d6:	ef 91       	pop	r30
 9d8:	bf 91       	pop	r27
 9da:	af 91       	pop	r26
 9dc:	9f 91       	pop	r25
 9de:	8f 91       	pop	r24
 9e0:	7f 91       	pop	r23
 9e2:	6f 91       	pop	r22
 9e4:	5f 91       	pop	r21
 9e6:	4f 91       	pop	r20
 9e8:	3f 91       	pop	r19
 9ea:	2f 91       	pop	r18
 9ec:	0f 90       	pop	r0
 9ee:	0f be       	out	0x3f, r0	; 63
 9f0:	0f 90       	pop	r0
 9f2:	1f 90       	pop	r1
 9f4:	18 95       	reti

000009f6 <__vector_10>:
 9f6:	1f 92       	push	r1
 9f8:	0f 92       	push	r0
 9fa:	0f b6       	in	r0, 0x3f	; 63
 9fc:	0f 92       	push	r0
 9fe:	11 24       	eor	r1, r1
 a00:	2f 93       	push	r18
 a02:	3f 93       	push	r19
 a04:	4f 93       	push	r20
 a06:	5f 93       	push	r21
 a08:	6f 93       	push	r22
 a0a:	7f 93       	push	r23
 a0c:	8f 93       	push	r24
 a0e:	9f 93       	push	r25
 a10:	af 93       	push	r26
 a12:	bf 93       	push	r27
 a14:	ef 93       	push	r30
 a16:	ff 93       	push	r31
 a18:	e0 91 9d 00 	lds	r30, 0x009D	; 0x80009d <CallBackPtr_TIMER0_COMP>
 a1c:	f0 91 9e 00 	lds	r31, 0x009E	; 0x80009e <CallBackPtr_TIMER0_COMP+0x1>
 a20:	30 97       	sbiw	r30, 0x00	; 0
 a22:	09 f0       	breq	.+2      	; 0xa26 <__vector_10+0x30>
 a24:	09 95       	icall
 a26:	ff 91       	pop	r31
 a28:	ef 91       	pop	r30
 a2a:	bf 91       	pop	r27
 a2c:	af 91       	pop	r26
 a2e:	9f 91       	pop	r25
 a30:	8f 91       	pop	r24
 a32:	7f 91       	pop	r23
 a34:	6f 91       	pop	r22
 a36:	5f 91       	pop	r21
 a38:	4f 91       	pop	r20
 a3a:	3f 91       	pop	r19
 a3c:	2f 91       	pop	r18
 a3e:	0f 90       	pop	r0
 a40:	0f be       	out	0x3f, r0	; 63
 a42:	0f 90       	pop	r0
 a44:	1f 90       	pop	r1
 a46:	18 95       	reti

00000a48 <__vector_11>:
 a48:	1f 92       	push	r1
 a4a:	0f 92       	push	r0
 a4c:	0f b6       	in	r0, 0x3f	; 63
 a4e:	0f 92       	push	r0
 a50:	11 24       	eor	r1, r1
 a52:	2f 93       	push	r18
 a54:	3f 93       	push	r19
 a56:	4f 93       	push	r20
 a58:	5f 93       	push	r21
 a5a:	6f 93       	push	r22
 a5c:	7f 93       	push	r23
 a5e:	8f 93       	push	r24
 a60:	9f 93       	push	r25
 a62:	af 93       	push	r26
 a64:	bf 93       	push	r27
 a66:	ef 93       	push	r30
 a68:	ff 93       	push	r31
 a6a:	e0 91 9f 00 	lds	r30, 0x009F	; 0x80009f <CallBackPtr_TIMER0_OVF>
 a6e:	f0 91 a0 00 	lds	r31, 0x00A0	; 0x8000a0 <CallBackPtr_TIMER0_OVF+0x1>
 a72:	30 97       	sbiw	r30, 0x00	; 0
 a74:	09 f0       	breq	.+2      	; 0xa78 <__vector_11+0x30>
 a76:	09 95       	icall
 a78:	ff 91       	pop	r31
 a7a:	ef 91       	pop	r30
 a7c:	bf 91       	pop	r27
 a7e:	af 91       	pop	r26
 a80:	9f 91       	pop	r25
 a82:	8f 91       	pop	r24
 a84:	7f 91       	pop	r23
 a86:	6f 91       	pop	r22
 a88:	5f 91       	pop	r21
 a8a:	4f 91       	pop	r20
 a8c:	3f 91       	pop	r19
 a8e:	2f 91       	pop	r18
 a90:	0f 90       	pop	r0
 a92:	0f be       	out	0x3f, r0	; 63
 a94:	0f 90       	pop	r0
 a96:	1f 90       	pop	r1
 a98:	18 95       	reti

00000a9a <__vector_6>:
 a9a:	1f 92       	push	r1
 a9c:	0f 92       	push	r0
 a9e:	0f b6       	in	r0, 0x3f	; 63
 aa0:	0f 92       	push	r0
 aa2:	11 24       	eor	r1, r1
 aa4:	2f 93       	push	r18
 aa6:	3f 93       	push	r19
 aa8:	4f 93       	push	r20
 aaa:	5f 93       	push	r21
 aac:	6f 93       	push	r22
 aae:	7f 93       	push	r23
 ab0:	8f 93       	push	r24
 ab2:	9f 93       	push	r25
 ab4:	af 93       	push	r26
 ab6:	bf 93       	push	r27
 ab8:	ef 93       	push	r30
 aba:	ff 93       	push	r31
 abc:	e0 91 a5 00 	lds	r30, 0x00A5	; 0x8000a5 <CallBackPtr_TIMER1_CAPT>
 ac0:	f0 91 a6 00 	lds	r31, 0x00A6	; 0x8000a6 <CallBackPtr_TIMER1_CAPT+0x1>
 ac4:	30 97       	sbiw	r30, 0x00	; 0
 ac6:	09 f0       	breq	.+2      	; 0xaca <__vector_6+0x30>
 ac8:	09 95       	icall
 aca:	ff 91       	pop	r31
 acc:	ef 91       	pop	r30
 ace:	bf 91       	pop	r27
 ad0:	af 91       	pop	r26
 ad2:	9f 91       	pop	r25
 ad4:	8f 91       	pop	r24
 ad6:	7f 91       	pop	r23
 ad8:	6f 91       	pop	r22
 ada:	5f 91       	pop	r21
 adc:	4f 91       	pop	r20
 ade:	3f 91       	pop	r19
 ae0:	2f 91       	pop	r18
 ae2:	0f 90       	pop	r0
 ae4:	0f be       	out	0x3f, r0	; 63
 ae6:	0f 90       	pop	r0
 ae8:	1f 90       	pop	r1
 aea:	18 95       	reti

00000aec <__vector_7>:
 aec:	1f 92       	push	r1
 aee:	0f 92       	push	r0
 af0:	0f b6       	in	r0, 0x3f	; 63
 af2:	0f 92       	push	r0
 af4:	11 24       	eor	r1, r1
 af6:	2f 93       	push	r18
 af8:	3f 93       	push	r19
 afa:	4f 93       	push	r20
 afc:	5f 93       	push	r21
 afe:	6f 93       	push	r22
 b00:	7f 93       	push	r23
 b02:	8f 93       	push	r24
 b04:	9f 93       	push	r25
 b06:	af 93       	push	r26
 b08:	bf 93       	push	r27
 b0a:	ef 93       	push	r30
 b0c:	ff 93       	push	r31
 b0e:	e0 91 a7 00 	lds	r30, 0x00A7	; 0x8000a7 <CallBackPtr_TIMER1_COMPA>
 b12:	f0 91 a8 00 	lds	r31, 0x00A8	; 0x8000a8 <CallBackPtr_TIMER1_COMPA+0x1>
 b16:	30 97       	sbiw	r30, 0x00	; 0
 b18:	09 f0       	breq	.+2      	; 0xb1c <__vector_7+0x30>
 b1a:	09 95       	icall
 b1c:	ff 91       	pop	r31
 b1e:	ef 91       	pop	r30
 b20:	bf 91       	pop	r27
 b22:	af 91       	pop	r26
 b24:	9f 91       	pop	r25
 b26:	8f 91       	pop	r24
 b28:	7f 91       	pop	r23
 b2a:	6f 91       	pop	r22
 b2c:	5f 91       	pop	r21
 b2e:	4f 91       	pop	r20
 b30:	3f 91       	pop	r19
 b32:	2f 91       	pop	r18
 b34:	0f 90       	pop	r0
 b36:	0f be       	out	0x3f, r0	; 63
 b38:	0f 90       	pop	r0
 b3a:	1f 90       	pop	r1
 b3c:	18 95       	reti

00000b3e <__vector_8>:
 b3e:	1f 92       	push	r1
 b40:	0f 92       	push	r0
 b42:	0f b6       	in	r0, 0x3f	; 63
 b44:	0f 92       	push	r0
 b46:	11 24       	eor	r1, r1
 b48:	2f 93       	push	r18
 b4a:	3f 93       	push	r19
 b4c:	4f 93       	push	r20
 b4e:	5f 93       	push	r21
 b50:	6f 93       	push	r22
 b52:	7f 93       	push	r23
 b54:	8f 93       	push	r24
 b56:	9f 93       	push	r25
 b58:	af 93       	push	r26
 b5a:	bf 93       	push	r27
 b5c:	ef 93       	push	r30
 b5e:	ff 93       	push	r31
 b60:	e0 91 a1 00 	lds	r30, 0x00A1	; 0x8000a1 <CallBackPtr_TIMER1_COMPB>
 b64:	f0 91 a2 00 	lds	r31, 0x00A2	; 0x8000a2 <CallBackPtr_TIMER1_COMPB+0x1>
 b68:	30 97       	sbiw	r30, 0x00	; 0
 b6a:	09 f0       	breq	.+2      	; 0xb6e <__vector_8+0x30>
 b6c:	09 95       	icall
 b6e:	ff 91       	pop	r31
 b70:	ef 91       	pop	r30
 b72:	bf 91       	pop	r27
 b74:	af 91       	pop	r26
 b76:	9f 91       	pop	r25
 b78:	8f 91       	pop	r24
 b7a:	7f 91       	pop	r23
 b7c:	6f 91       	pop	r22
 b7e:	5f 91       	pop	r21
 b80:	4f 91       	pop	r20
 b82:	3f 91       	pop	r19
 b84:	2f 91       	pop	r18
 b86:	0f 90       	pop	r0
 b88:	0f be       	out	0x3f, r0	; 63
 b8a:	0f 90       	pop	r0
 b8c:	1f 90       	pop	r1
 b8e:	18 95       	reti

00000b90 <__vector_9>:
 b90:	1f 92       	push	r1
 b92:	0f 92       	push	r0
 b94:	0f b6       	in	r0, 0x3f	; 63
 b96:	0f 92       	push	r0
 b98:	11 24       	eor	r1, r1
 b9a:	2f 93       	push	r18
 b9c:	3f 93       	push	r19
 b9e:	4f 93       	push	r20
 ba0:	5f 93       	push	r21
 ba2:	6f 93       	push	r22
 ba4:	7f 93       	push	r23
 ba6:	8f 93       	push	r24
 ba8:	9f 93       	push	r25
 baa:	af 93       	push	r26
 bac:	bf 93       	push	r27
 bae:	ef 93       	push	r30
 bb0:	ff 93       	push	r31
 bb2:	e0 91 a3 00 	lds	r30, 0x00A3	; 0x8000a3 <CallBackPtr_TIMER1_OVF>
 bb6:	f0 91 a4 00 	lds	r31, 0x00A4	; 0x8000a4 <CallBackPtr_TIMER1_OVF+0x1>
 bba:	30 97       	sbiw	r30, 0x00	; 0
 bbc:	09 f0       	breq	.+2      	; 0xbc0 <__vector_9+0x30>
 bbe:	09 95       	icall
 bc0:	ff 91       	pop	r31
 bc2:	ef 91       	pop	r30
 bc4:	bf 91       	pop	r27
 bc6:	af 91       	pop	r26
 bc8:	9f 91       	pop	r25
 bca:	8f 91       	pop	r24
 bcc:	7f 91       	pop	r23
 bce:	6f 91       	pop	r22
 bd0:	5f 91       	pop	r21
 bd2:	4f 91       	pop	r20
 bd4:	3f 91       	pop	r19
 bd6:	2f 91       	pop	r18
 bd8:	0f 90       	pop	r0
 bda:	0f be       	out	0x3f, r0	; 63
 bdc:	0f 90       	pop	r0
 bde:	1f 90       	pop	r1
 be0:	18 95       	reti

00000be2 <UART_Initialization>:
}

// UART TXC Callback Function
void UART_CallBackFunction_TXC(void (*Ptr_UART_TXC)(void))
{
	CallBackPtr_UART_TXC = Ptr_UART_TXC;
 be2:	8a b1       	in	r24, 0x0a	; 10
 be4:	88 60       	ori	r24, 0x08	; 8
 be6:	8a b9       	out	0x0a, r24	; 10
 be8:	8a b1       	in	r24, 0x0a	; 10
 bea:	80 61       	ori	r24, 0x10	; 16
 bec:	8a b9       	out	0x0a, r24	; 10
 bee:	86 e8       	ldi	r24, 0x86	; 134
 bf0:	80 bd       	out	0x20, r24	; 32
 bf2:	83 e3       	ldi	r24, 0x33	; 51
 bf4:	89 b9       	out	0x09, r24	; 9
 bf6:	10 bc       	out	0x20, r1	; 32
 bf8:	8a b1       	in	r24, 0x0a	; 10
 bfa:	80 68       	ori	r24, 0x80	; 128
 bfc:	8a b9       	out	0x0a, r24	; 10
 bfe:	8a b1       	in	r24, 0x0a	; 10
 c00:	80 64       	ori	r24, 0x40	; 64
 c02:	8a b9       	out	0x0a, r24	; 10
 c04:	8a b1       	in	r24, 0x0a	; 10
 c06:	80 62       	ori	r24, 0x20	; 32
 c08:	8a b9       	out	0x0a, r24	; 10
 c0a:	08 95       	ret

00000c0c <__vector_13>:
}


// The ISR For the UART RXC Callback Function
void __vector_13(void) __attribute__((signal, used));
void __vector_13(void) {
 c0c:	1f 92       	push	r1
 c0e:	0f 92       	push	r0
 c10:	0f b6       	in	r0, 0x3f	; 63
 c12:	0f 92       	push	r0
 c14:	11 24       	eor	r1, r1
 c16:	2f 93       	push	r18
 c18:	3f 93       	push	r19
 c1a:	4f 93       	push	r20
 c1c:	5f 93       	push	r21
 c1e:	6f 93       	push	r22
 c20:	7f 93       	push	r23
 c22:	8f 93       	push	r24
 c24:	9f 93       	push	r25
 c26:	af 93       	push	r26
 c28:	bf 93       	push	r27
 c2a:	ef 93       	push	r30
 c2c:	ff 93       	push	r31
	if(CallBackPtr_UART_RXC != NULL) {
 c2e:	e0 91 a9 00 	lds	r30, 0x00A9	; 0x8000a9 <CallBackPtr_UART_RXC>
 c32:	f0 91 aa 00 	lds	r31, 0x00AA	; 0x8000aa <CallBackPtr_UART_RXC+0x1>
 c36:	30 97       	sbiw	r30, 0x00	; 0
 c38:	09 f0       	breq	.+2      	; 0xc3c <__vector_13+0x30>
		CallBackPtr_UART_RXC();
 c3a:	09 95       	icall
	}
}
 c3c:	ff 91       	pop	r31
 c3e:	ef 91       	pop	r30
 c40:	bf 91       	pop	r27
 c42:	af 91       	pop	r26
 c44:	9f 91       	pop	r25
 c46:	8f 91       	pop	r24
 c48:	7f 91       	pop	r23
 c4a:	6f 91       	pop	r22
 c4c:	5f 91       	pop	r21
 c4e:	4f 91       	pop	r20
 c50:	3f 91       	pop	r19
 c52:	2f 91       	pop	r18
 c54:	0f 90       	pop	r0
 c56:	0f be       	out	0x3f, r0	; 63
 c58:	0f 90       	pop	r0
 c5a:	1f 90       	pop	r1
 c5c:	18 95       	reti

00000c5e <__vector_14>:

// The ISR For the UART UDRE Callback Function
void __vector_14(void) __attribute__((signal, used));
void __vector_14(void) {
 c5e:	1f 92       	push	r1
 c60:	0f 92       	push	r0
 c62:	0f b6       	in	r0, 0x3f	; 63
 c64:	0f 92       	push	r0
 c66:	11 24       	eor	r1, r1
 c68:	2f 93       	push	r18
 c6a:	3f 93       	push	r19
 c6c:	4f 93       	push	r20
 c6e:	5f 93       	push	r21
 c70:	6f 93       	push	r22
 c72:	7f 93       	push	r23
 c74:	8f 93       	push	r24
 c76:	9f 93       	push	r25
 c78:	af 93       	push	r26
 c7a:	bf 93       	push	r27
 c7c:	ef 93       	push	r30
 c7e:	ff 93       	push	r31
	if(CallBackPtr_UART_UDRE != NULL) {
 c80:	e0 91 ad 00 	lds	r30, 0x00AD	; 0x8000ad <CallBackPtr_UART_UDRE>
 c84:	f0 91 ae 00 	lds	r31, 0x00AE	; 0x8000ae <CallBackPtr_UART_UDRE+0x1>
 c88:	30 97       	sbiw	r30, 0x00	; 0
 c8a:	09 f0       	breq	.+2      	; 0xc8e <__vector_14+0x30>
		CallBackPtr_UART_UDRE();
 c8c:	09 95       	icall
	}
}
 c8e:	ff 91       	pop	r31
 c90:	ef 91       	pop	r30
 c92:	bf 91       	pop	r27
 c94:	af 91       	pop	r26
 c96:	9f 91       	pop	r25
 c98:	8f 91       	pop	r24
 c9a:	7f 91       	pop	r23
 c9c:	6f 91       	pop	r22
 c9e:	5f 91       	pop	r21
 ca0:	4f 91       	pop	r20
 ca2:	3f 91       	pop	r19
 ca4:	2f 91       	pop	r18
 ca6:	0f 90       	pop	r0
 ca8:	0f be       	out	0x3f, r0	; 63
 caa:	0f 90       	pop	r0
 cac:	1f 90       	pop	r1
 cae:	18 95       	reti

00000cb0 <__vector_15>:

// The ISR For the UART TXC Callback Function
void __vector_15(void) __attribute__((signal, used));
void __vector_15(void) {
 cb0:	1f 92       	push	r1
 cb2:	0f 92       	push	r0
 cb4:	0f b6       	in	r0, 0x3f	; 63
 cb6:	0f 92       	push	r0
 cb8:	11 24       	eor	r1, r1
 cba:	2f 93       	push	r18
 cbc:	3f 93       	push	r19
 cbe:	4f 93       	push	r20
 cc0:	5f 93       	push	r21
 cc2:	6f 93       	push	r22
 cc4:	7f 93       	push	r23
 cc6:	8f 93       	push	r24
 cc8:	9f 93       	push	r25
 cca:	af 93       	push	r26
 ccc:	bf 93       	push	r27
 cce:	ef 93       	push	r30
 cd0:	ff 93       	push	r31
	if(CallBackPtr_UART_TXC != NULL) {
 cd2:	e0 91 ab 00 	lds	r30, 0x00AB	; 0x8000ab <CallBackPtr_UART_TXC>
 cd6:	f0 91 ac 00 	lds	r31, 0x00AC	; 0x8000ac <CallBackPtr_UART_TXC+0x1>
 cda:	30 97       	sbiw	r30, 0x00	; 0
 cdc:	09 f0       	breq	.+2      	; 0xce0 <__vector_15+0x30>
		CallBackPtr_UART_TXC();
 cde:	09 95       	icall
	}
}
 ce0:	ff 91       	pop	r31
 ce2:	ef 91       	pop	r30
 ce4:	bf 91       	pop	r27
 ce6:	af 91       	pop	r26
 ce8:	9f 91       	pop	r25
 cea:	8f 91       	pop	r24
 cec:	7f 91       	pop	r23
 cee:	6f 91       	pop	r22
 cf0:	5f 91       	pop	r21
 cf2:	4f 91       	pop	r20
 cf4:	3f 91       	pop	r19
 cf6:	2f 91       	pop	r18
 cf8:	0f 90       	pop	r0
 cfa:	0f be       	out	0x3f, r0	; 63
 cfc:	0f 90       	pop	r0
 cfe:	1f 90       	pop	r1
 d00:	18 95       	reti

00000d02 <__udivmodsi4>:
 d02:	a1 e2       	ldi	r26, 0x21	; 33
 d04:	1a 2e       	mov	r1, r26
 d06:	aa 1b       	sub	r26, r26
 d08:	bb 1b       	sub	r27, r27
 d0a:	fd 01       	movw	r30, r26
 d0c:	0d c0       	rjmp	.+26     	; 0xd28 <__udivmodsi4_ep>

00000d0e <__udivmodsi4_loop>:
 d0e:	aa 1f       	adc	r26, r26
 d10:	bb 1f       	adc	r27, r27
 d12:	ee 1f       	adc	r30, r30
 d14:	ff 1f       	adc	r31, r31
 d16:	a2 17       	cp	r26, r18
 d18:	b3 07       	cpc	r27, r19
 d1a:	e4 07       	cpc	r30, r20
 d1c:	f5 07       	cpc	r31, r21
 d1e:	20 f0       	brcs	.+8      	; 0xd28 <__udivmodsi4_ep>
 d20:	a2 1b       	sub	r26, r18
 d22:	b3 0b       	sbc	r27, r19
 d24:	e4 0b       	sbc	r30, r20
 d26:	f5 0b       	sbc	r31, r21

00000d28 <__udivmodsi4_ep>:
 d28:	66 1f       	adc	r22, r22
 d2a:	77 1f       	adc	r23, r23
 d2c:	88 1f       	adc	r24, r24
 d2e:	99 1f       	adc	r25, r25
 d30:	1a 94       	dec	r1
 d32:	69 f7       	brne	.-38     	; 0xd0e <__udivmodsi4_loop>
 d34:	60 95       	com	r22
 d36:	70 95       	com	r23
 d38:	80 95       	com	r24
 d3a:	90 95       	com	r25
 d3c:	9b 01       	movw	r18, r22
 d3e:	ac 01       	movw	r20, r24
 d40:	bd 01       	movw	r22, r26
 d42:	cf 01       	movw	r24, r30
 d44:	08 95       	ret

00000d46 <__umulhisi3>:
 d46:	a2 9f       	mul	r26, r18
 d48:	b0 01       	movw	r22, r0
 d4a:	b3 9f       	mul	r27, r19
 d4c:	c0 01       	movw	r24, r0
 d4e:	a3 9f       	mul	r26, r19
 d50:	70 0d       	add	r23, r0
 d52:	81 1d       	adc	r24, r1
 d54:	11 24       	eor	r1, r1
 d56:	91 1d       	adc	r25, r1
 d58:	b2 9f       	mul	r27, r18
 d5a:	70 0d       	add	r23, r0
 d5c:	81 1d       	adc	r24, r1
 d5e:	11 24       	eor	r1, r1
 d60:	91 1d       	adc	r25, r1
 d62:	08 95       	ret

00000d64 <__itoa_ncheck>:
 d64:	bb 27       	eor	r27, r27
 d66:	4a 30       	cpi	r20, 0x0A	; 10
 d68:	31 f4       	brne	.+12     	; 0xd76 <__itoa_ncheck+0x12>
 d6a:	99 23       	and	r25, r25
 d6c:	22 f4       	brpl	.+8      	; 0xd76 <__itoa_ncheck+0x12>
 d6e:	bd e2       	ldi	r27, 0x2D	; 45
 d70:	90 95       	com	r25
 d72:	81 95       	neg	r24
 d74:	9f 4f       	sbci	r25, 0xFF	; 255
 d76:	0c 94 be 06 	jmp	0xd7c	; 0xd7c <__utoa_common>

00000d7a <__utoa_ncheck>:
 d7a:	bb 27       	eor	r27, r27

00000d7c <__utoa_common>:
 d7c:	fb 01       	movw	r30, r22
 d7e:	55 27       	eor	r21, r21
 d80:	aa 27       	eor	r26, r26
 d82:	88 0f       	add	r24, r24
 d84:	99 1f       	adc	r25, r25
 d86:	aa 1f       	adc	r26, r26
 d88:	a4 17       	cp	r26, r20
 d8a:	10 f0       	brcs	.+4      	; 0xd90 <__utoa_common+0x14>
 d8c:	a4 1b       	sub	r26, r20
 d8e:	83 95       	inc	r24
 d90:	50 51       	subi	r21, 0x10	; 16
 d92:	b9 f7       	brne	.-18     	; 0xd82 <__utoa_common+0x6>
 d94:	a0 5d       	subi	r26, 0xD0	; 208
 d96:	aa 33       	cpi	r26, 0x3A	; 58
 d98:	08 f0       	brcs	.+2      	; 0xd9c <__utoa_common+0x20>
 d9a:	a9 5d       	subi	r26, 0xD9	; 217
 d9c:	a1 93       	st	Z+, r26
 d9e:	00 97       	sbiw	r24, 0x00	; 0
 da0:	79 f7       	brne	.-34     	; 0xd80 <__utoa_common+0x4>
 da2:	b1 11       	cpse	r27, r1
 da4:	b1 93       	st	Z+, r27
 da6:	11 92       	st	Z+, r1
 da8:	cb 01       	movw	r24, r22
 daa:	0c 94 d7 06 	jmp	0xdae	; 0xdae <strrev>

00000dae <strrev>:
 dae:	dc 01       	movw	r26, r24
 db0:	fc 01       	movw	r30, r24
 db2:	67 2f       	mov	r22, r23
 db4:	71 91       	ld	r23, Z+
 db6:	77 23       	and	r23, r23
 db8:	e1 f7       	brne	.-8      	; 0xdb2 <strrev+0x4>
 dba:	32 97       	sbiw	r30, 0x02	; 2
 dbc:	04 c0       	rjmp	.+8      	; 0xdc6 <strrev+0x18>
 dbe:	7c 91       	ld	r23, X
 dc0:	6d 93       	st	X+, r22
 dc2:	70 83       	st	Z, r23
 dc4:	62 91       	ld	r22, -Z
 dc6:	ae 17       	cp	r26, r30
 dc8:	bf 07       	cpc	r27, r31
 dca:	c8 f3       	brcs	.-14     	; 0xdbe <strrev+0x10>
 dcc:	08 95       	ret

00000dce <_exit>:
 dce:	f8 94       	cli

00000dd0 <__stop_program>:
 dd0:	ff cf       	rjmp	.-2      	; 0xdd0 <__stop_program>
